#
# Dockerfile for the geOrchestra openldap service
#

FROM dinkel/openldap

ENV TZ Europe/Paris

# environment variables
ENV NAME_SERVER              194.57.91.200
ENV SLAPD_PASSWORD           secret
ENV SLAPD_DOMAIN             georchestra.org
ENV SLAPD_DC_STRING          dc=georchestra,dc=org
ENV AD_PASSWORD              SeaSex&S1
ENV AD_DOMAIN                umrthema.univ-fcomte.fr
ENV AD_DC_STRING             dc=umrthema,dc=univ-fcomte,dc=fr
ENV AD_SERVER                thema-serv3.umrthema.univ-fcomte.fr

RUN echo $TZ > /etc/timezone && \
    apt-get update && apt-get install -y tzdata && \
    rm /etc/localtime && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get clean

# add packages
RUN apt-get install -y ldap-utils python python-ldap cron sasl2-bin
RUN rm -rf /var/lib/apt/lists/*

# add ldif files for georchestra
USER openldap
ADD groupofmembers.ldif /etc/ldap.dist/modules/
ADD docker/indexes.ldif /tmp/
ADD memberof.ldif /tmp/
ADD georchestra.ldif /tmp/

# prepare entrypoint
USER root
RUN mkdir /docker-entrypoint.d
ADD docker/docker-entrypoint.d/* /docker-entrypoint.d/
ADD docker/docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.d/*

# add ldif files which will be integrated by docker-entrypoint.d
RUN mkdir                 /tmp/LDAP
ADD cn-config.ldif        /tmp/LDAP/cn-config.ldif
ADD open-user.ldif        /tmp/LDAP/open-user.ldif
ADD rsct-user.ldif        /tmp/LDAP/rsct-user.ldif
ADD open-user-groups.ldif /tmp/LDAP/open-user-groups.ldif
ADD rsct-user-groups.ldif /tmp/LDAP/rsct-user-groups.ldif

# configure saslauth
ADD saslauthd      /etc/default/saslauthd
ADD saslauthd.conf /etc/saslauthd.conf

# add configuration files for LDAP
ADD slapd.conf     /tmp/LDAP/slapd.conf
ADD ldap.conf      /tmp/LDAP/ldap.conf
 
# openldap must be in sasl group
RUN adduser openldap sasl
 
# create a log directory for georchestra
RUN mkdir /var/log/georchestra

# root will integrate AD users in georchestra LDAP
ADD dot.ldap.conf   /root/.ldap.conf
ADD ad2ldap_sync.py /root/ad2ldap_sync.py
RUN chmod +x        /root/ad2ldap_sync.py
 
ADD root_crontab /var/spool/cron/crontabs/root
RUN chmod 0600   /var/spool/cron/crontabs/root

# start.sh will start the container
ADD start.sh /root/
RUN chmod +x /root/start.sh

ENTRYPOINT [ "/docker-entrypoint.sh" ]

CMD ["/root/start.sh"]

